; ModuleID = "pascal_program"
target triple = "unknown-unknown-unknown"
target datalayout = ""

define void @"main"()
{
entry:
  %"i" = alloca i16
  %"n" = alloca i16
  %"f" = alloca float
  store i16 10, i16* %"n"
  store float 0x3ff0000000000000, float* %"f"
  %".4" = alloca [255 x i8]
  store [255 x i8] c"Start for 1 tox i8]* %".4"
  %".6" = getelementptr [255 x i8], [255 x i8]* %".4", i8 0, i8 0
  %".7" = call i32 (i8*, ...) @"printf"(i8* %".6")
  %".8" = load i16, i16* %"n"
  %".9" = alloca [4 x i8]
  store [4 x i8] c"%hd\00", [4 x i8]* %".9"
  %".11" = getelementptr [4 x i8], [4 x i8]* %".9", i8 0, i8 0
  %".12" = call i32 (i8*, ...) @"printf"(i8* %".11", i16 %".8")
  %"end_line_str_ptr" = getelementptr inbounds [2 x i8], [2 x i8]* @"end_line_str", i32 0, i32 0
  %".13" = call i32 (i8*, ...) @"printf"(i8* %"end_line_str_ptr")
  store i16 1, i16* %"i"
  br label %"for_cond"
for_cond:
  %".16" = load i16, i16* %"i"
  %".17" = load i16, i16* %"n"
  %".18" = icmp sle i16 %".16", %".17"
  br i1 %".18", label %"for_body", label %"for_exit"
for_body:
  %".20" = load i16, i16* %"i"
  %".21" = srem i16 %".20", 2
  %".22" = icmp eq i16 %".21", 0
  br i1 %".22", label %"then", label %"else"
for_exit:
  store float              0x0, float* %"f"
  store i16 1, i16* %"i"
  br label %"while_cond"
then:
  %".24" = load float, float* %"f"
  %".25" = load i16, i16* %"i"
  %".26" = sitofp i16 %".25" to float
  %".27" = fmul float %".24", %".26"
  store float %".27", float* %"f"
  br label %"end"
else:
  %".30" = load float, float* %"f"
  %".31" = load i16, i16* %"i"
  %".32" = sitofp i16 %".31" to float
  %".33" = fdiv float %".30", %".32"
  store float %".33", float* %"f"
  br label %"end"
end:
  %".36" = alloca [255 x i8]
  store [255 x i8] c"fx i8]* %".36"
  %".38" = getelementptr [255 x i8], [255 x i8]* %".36", i8 0, i8 0
  %".39" = call i32 (i8*, ...) @"printf"(i8* %".38")
  %".40" = load float, float* %"f"
  %".41" = alloca [3 x i8]
  store [3 x i8] c"%f\00", [3 x i8]* %".41"
  %".43" = getelementptr [3 x i8], [3 x i8]* %".41", i8 0, i8 0
  %".44" = call i32 (i8*, ...) @"printf"(i8* %".43", float %".40")
  %"end_line_str_ptr.1" = getelementptr inbounds [2 x i8], [2 x i8]* @"end_line_str", i32 0, i32 0
  %".45" = call i32 (i8*, ...) @"printf"(i8* %"end_line_str_ptr.1")
  %".46" = add i16 %".16", 1
  store i16 %".46", i16* %"i"
  br label %"for_cond"
while_cond:
  %".52" = load float, float* %"f"
  %".53" = fcmp olt float %".52", 0x4059000000000000
  br i1 %".53", label %"while_body", label %"while_exit"
while_body:
  %".55" = load i16, i16* %"i"
  %".56" = mul i16 %".55", 2
  store i16 %".56", i16* %"i"
  %".58" = load float, float* %"f"
  %".59" = load i16, i16* %"i"
  %".60" = sitofp i16 %".59" to float
  %".61" = fadd float %".58", %".60"
  store float %".61", float* %"f"
  %".63" = alloca [255 x i8]
  store [255 x i8] c"ix i8]* %".63"
  %".65" = getelementptr [255 x i8], [255 x i8]* %".63", i8 0, i8 0
  %".66" = call i32 (i8*, ...) @"printf"(i8* %".65")
  %".67" = load i16, i16* %"i"
  %".68" = alloca [4 x i8]
  store [4 x i8] c"%hd\00", [4 x i8]* %".68"
  %".70" = getelementptr [4 x i8], [4 x i8]* %".68", i8 0, i8 0
  %".71" = call i32 (i8*, ...) @"printf"(i8* %".70", i16 %".67")
  %"end_line_str_ptr.2" = getelementptr inbounds [2 x i8], [2 x i8]* @"end_line_str", i32 0, i32 0
  %".72" = call i32 (i8*, ...) @"printf"(i8* %"end_line_str_ptr.2")
  br label %"while_cond"
while_exit:
  %".74" = alloca [255 x i8]
  store [255 x i8] c"Sumx i8]* %".74"
  %".76" = getelementptr [255 x i8], [255 x i8]* %".74", i8 0, i8 0
  %".77" = call i32 (i8*, ...) @"printf"(i8* %".76")
  %".78" = load float, float* %"f"
  %".79" = alloca [3 x i8]
  store [3 x i8] c"%f\00", [3 x i8]* %".79"
  %".81" = getelementptr [3 x i8], [3 x i8]* %".79", i8 0, i8 0
  %".82" = call i32 (i8*, ...) @"printf"(i8* %".81", float %".78")
  %"end_line_str_ptr.3" = getelementptr inbounds [2 x i8], [2 x i8]* @"end_line_str", i32 0, i32 0
  %".83" = call i32 (i8*, ...) @"printf"(i8* %"end_line_str_ptr.3")
  %".84" = alloca [255 x i8]
  store [255 x i8] c"Expect = 126\0ax i8]* %".84"
  %".86" = getelementptr [255 x i8], [255 x i8]* %".84", i8 0, i8 0
  %".87" = call i32 (i8*, ...) @"printf"(i8* %".86")
  %"end_line_str_ptr.4" = getelementptr inbounds [2 x i8], [2 x i8]* @"end_line_str", i32 0, i32 0
  %".88" = call i32 (i8*, ...) @"printf"(i8* %"end_line_str_ptr.4")
  ret void
}

declare i32 @"printf"(i8* %".1", ...)

@"end_line_str" = internal constant [2 x i8] [i8 10, i8 0]
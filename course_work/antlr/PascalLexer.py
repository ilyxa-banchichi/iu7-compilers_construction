# Generated from Pascal.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,78,541,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
        71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,1,
        0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,
        3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,
        5,1,5,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,
        9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,
        1,11,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,
        1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,
        1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,
        1,19,1,19,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,22,1,22,1,22,
        1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,
        1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,
        1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,
        1,29,1,29,1,29,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,32,1,32,
        1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,
        1,34,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,38,1,39,
        1,39,1,40,1,40,1,40,1,41,1,41,1,42,1,42,1,43,1,43,1,44,1,44,1,45,
        1,45,1,45,1,46,1,46,1,47,1,47,1,47,1,48,1,48,1,48,1,49,1,49,1,50,
        1,50,1,51,1,51,1,52,1,52,1,53,1,53,1,53,1,54,1,54,1,55,1,55,1,55,
        1,56,1,56,1,57,1,57,1,58,1,58,1,59,1,59,1,59,1,60,1,60,1,61,1,61,
        1,62,1,62,1,62,1,62,1,62,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,
        1,63,1,63,1,64,1,64,1,64,1,64,1,64,1,65,1,65,1,65,1,65,1,65,1,65,
        1,65,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,
        1,66,1,66,1,66,1,67,1,67,1,67,1,67,1,67,1,68,1,68,1,68,1,68,1,68,
        1,68,1,69,1,69,1,69,1,69,1,70,1,70,1,70,1,70,1,71,4,71,464,8,71,
        11,71,12,71,465,1,71,1,71,1,72,1,72,1,72,1,72,5,72,474,8,72,10,72,
        12,72,477,9,72,1,72,1,72,1,72,1,72,1,72,1,73,1,73,5,73,486,8,73,
        10,73,12,73,489,9,73,1,73,1,73,1,73,1,73,1,74,1,74,5,74,497,8,74,
        10,74,12,74,500,9,74,1,75,1,75,1,75,1,75,5,75,506,8,75,10,75,12,
        75,509,9,75,1,75,1,75,1,76,4,76,514,8,76,11,76,12,76,515,1,77,4,
        77,519,8,77,11,77,12,77,520,1,77,1,77,4,77,525,8,77,11,77,12,77,
        526,3,77,529,8,77,1,77,1,77,3,77,533,8,77,1,77,4,77,536,8,77,11,
        77,12,77,537,3,77,540,8,77,2,475,487,0,78,1,1,3,2,5,3,7,4,9,5,11,
        6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,
        35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,
        57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,
        79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,
        101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,
        60,121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,137,69,
        139,70,141,71,143,72,145,73,147,74,149,75,151,76,153,77,155,78,1,
        0,28,2,0,65,65,97,97,2,0,78,78,110,110,2,0,68,68,100,100,2,0,82,
        82,114,114,2,0,89,89,121,121,2,0,66,66,98,98,2,0,69,69,101,101,2,
        0,71,71,103,103,2,0,73,73,105,105,2,0,79,79,111,111,2,0,76,76,108,
        108,2,0,67,67,99,99,2,0,83,83,115,115,2,0,72,72,104,104,2,0,84,84,
        116,116,2,0,86,86,118,118,2,0,87,87,119,119,2,0,70,70,102,102,2,
        0,85,85,117,117,2,0,77,77,109,109,2,0,80,80,112,112,2,0,75,75,107,
        107,3,0,9,10,13,13,32,32,2,0,65,90,97,122,4,0,48,57,65,90,95,95,
        97,122,1,0,39,39,1,0,48,57,2,0,43,43,45,45,553,0,1,1,0,0,0,0,3,1,
        0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,
        0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,
        0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,
        0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,
        0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,
        0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,
        0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,
        0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,
        0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,
        0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,
        0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,
        113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,
        0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,
        1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,
        0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,
        0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,1,157,1,0,0,0,3,
        161,1,0,0,0,5,167,1,0,0,0,7,173,1,0,0,0,9,181,1,0,0,0,11,186,1,0,
        0,0,13,191,1,0,0,0,15,195,1,0,0,0,17,201,1,0,0,0,19,205,1,0,0,0,
        21,208,1,0,0,0,23,215,1,0,0,0,25,220,1,0,0,0,27,224,1,0,0,0,29,229,
        1,0,0,0,31,233,1,0,0,0,33,242,1,0,0,0,35,245,1,0,0,0,37,248,1,0,
        0,0,39,256,1,0,0,0,41,260,1,0,0,0,43,264,1,0,0,0,45,268,1,0,0,0,
        47,271,1,0,0,0,49,274,1,0,0,0,51,281,1,0,0,0,53,289,1,0,0,0,55,294,
        1,0,0,0,57,301,1,0,0,0,59,308,1,0,0,0,61,313,1,0,0,0,63,316,1,0,
        0,0,65,321,1,0,0,0,67,327,1,0,0,0,69,331,1,0,0,0,71,337,1,0,0,0,
        73,342,1,0,0,0,75,344,1,0,0,0,77,346,1,0,0,0,79,348,1,0,0,0,81,350,
        1,0,0,0,83,353,1,0,0,0,85,355,1,0,0,0,87,357,1,0,0,0,89,359,1,0,
        0,0,91,361,1,0,0,0,93,364,1,0,0,0,95,366,1,0,0,0,97,369,1,0,0,0,
        99,372,1,0,0,0,101,374,1,0,0,0,103,376,1,0,0,0,105,378,1,0,0,0,107,
        380,1,0,0,0,109,383,1,0,0,0,111,385,1,0,0,0,113,388,1,0,0,0,115,
        390,1,0,0,0,117,392,1,0,0,0,119,394,1,0,0,0,121,397,1,0,0,0,123,
        399,1,0,0,0,125,401,1,0,0,0,127,406,1,0,0,0,129,416,1,0,0,0,131,
        421,1,0,0,0,133,428,1,0,0,0,135,443,1,0,0,0,137,448,1,0,0,0,139,
        454,1,0,0,0,141,458,1,0,0,0,143,463,1,0,0,0,145,469,1,0,0,0,147,
        483,1,0,0,0,149,494,1,0,0,0,151,501,1,0,0,0,153,513,1,0,0,0,155,
        518,1,0,0,0,157,158,7,0,0,0,158,159,7,1,0,0,159,160,7,2,0,0,160,
        2,1,0,0,0,161,162,7,0,0,0,162,163,7,3,0,0,163,164,7,3,0,0,164,165,
        7,0,0,0,165,166,7,4,0,0,166,4,1,0,0,0,167,168,7,5,0,0,168,169,7,
        6,0,0,169,170,7,7,0,0,170,171,7,8,0,0,171,172,7,1,0,0,172,6,1,0,
        0,0,173,174,7,5,0,0,174,175,7,9,0,0,175,176,7,9,0,0,176,177,7,10,
        0,0,177,178,7,6,0,0,178,179,7,0,0,0,179,180,7,1,0,0,180,8,1,0,0,
        0,181,182,7,11,0,0,182,183,7,0,0,0,183,184,7,12,0,0,184,185,7,6,
        0,0,185,10,1,0,0,0,186,187,7,11,0,0,187,188,7,13,0,0,188,189,7,0,
        0,0,189,190,7,3,0,0,190,12,1,0,0,0,191,192,7,11,0,0,192,193,7,13,
        0,0,193,194,7,3,0,0,194,14,1,0,0,0,195,196,7,11,0,0,196,197,7,9,
        0,0,197,198,7,1,0,0,198,199,7,12,0,0,199,200,7,14,0,0,200,16,1,0,
        0,0,201,202,7,2,0,0,202,203,7,8,0,0,203,204,7,15,0,0,204,18,1,0,
        0,0,205,206,7,2,0,0,206,207,7,9,0,0,207,20,1,0,0,0,208,209,7,2,0,
        0,209,210,7,9,0,0,210,211,7,16,0,0,211,212,7,1,0,0,212,213,7,14,
        0,0,213,214,7,9,0,0,214,22,1,0,0,0,215,216,7,6,0,0,216,217,7,10,
        0,0,217,218,7,12,0,0,218,219,7,6,0,0,219,24,1,0,0,0,220,221,7,6,
        0,0,221,222,7,1,0,0,222,223,7,2,0,0,223,26,1,0,0,0,224,225,7,17,
        0,0,225,226,7,8,0,0,226,227,7,10,0,0,227,228,7,6,0,0,228,28,1,0,
        0,0,229,230,7,17,0,0,230,231,7,9,0,0,231,232,7,3,0,0,232,30,1,0,
        0,0,233,234,7,17,0,0,234,235,7,18,0,0,235,236,7,1,0,0,236,237,7,
        11,0,0,237,238,7,14,0,0,238,239,7,8,0,0,239,240,7,9,0,0,240,241,
        7,1,0,0,241,32,1,0,0,0,242,243,7,8,0,0,243,244,7,17,0,0,244,34,1,
        0,0,0,245,246,7,8,0,0,246,247,7,1,0,0,247,36,1,0,0,0,248,249,7,8,
        0,0,249,250,7,1,0,0,250,251,7,14,0,0,251,252,7,6,0,0,252,253,7,7,
        0,0,253,254,7,6,0,0,254,255,7,3,0,0,255,38,1,0,0,0,256,257,7,19,
        0,0,257,258,7,9,0,0,258,259,7,2,0,0,259,40,1,0,0,0,260,261,7,1,0,
        0,261,262,7,8,0,0,262,263,7,10,0,0,263,42,1,0,0,0,264,265,7,1,0,
        0,265,266,7,9,0,0,266,267,7,14,0,0,267,44,1,0,0,0,268,269,7,9,0,
        0,269,270,7,17,0,0,270,46,1,0,0,0,271,272,7,9,0,0,272,273,7,3,0,
        0,273,48,1,0,0,0,274,275,7,20,0,0,275,276,7,0,0,0,276,277,7,11,0,
        0,277,278,7,21,0,0,278,279,7,6,0,0,279,280,7,2,0,0,280,50,1,0,0,
        0,281,282,7,20,0,0,282,283,7,3,0,0,283,284,7,9,0,0,284,285,7,7,0,
        0,285,286,7,3,0,0,286,287,7,0,0,0,287,288,7,19,0,0,288,52,1,0,0,
        0,289,290,7,3,0,0,290,291,7,6,0,0,291,292,7,0,0,0,292,293,7,10,0,
        0,293,54,1,0,0,0,294,295,7,3,0,0,295,296,7,6,0,0,296,297,7,11,0,
        0,297,298,7,9,0,0,298,299,7,3,0,0,299,300,7,2,0,0,300,56,1,0,0,0,
        301,302,7,3,0,0,302,303,7,6,0,0,303,304,7,20,0,0,304,305,7,6,0,0,
        305,306,7,0,0,0,306,307,7,14,0,0,307,58,1,0,0,0,308,309,7,14,0,0,
        309,310,7,13,0,0,310,311,7,6,0,0,311,312,7,1,0,0,312,60,1,0,0,0,
        313,314,7,14,0,0,314,315,7,9,0,0,315,62,1,0,0,0,316,317,7,14,0,0,
        317,318,7,4,0,0,318,319,7,20,0,0,319,320,7,6,0,0,320,64,1,0,0,0,
        321,322,7,18,0,0,322,323,7,1,0,0,323,324,7,14,0,0,324,325,7,8,0,
        0,325,326,7,10,0,0,326,66,1,0,0,0,327,328,7,15,0,0,328,329,7,0,0,
        0,329,330,7,3,0,0,330,68,1,0,0,0,331,332,7,16,0,0,332,333,7,13,0,
        0,333,334,7,8,0,0,334,335,7,10,0,0,335,336,7,6,0,0,336,70,1,0,0,
        0,337,338,7,16,0,0,338,339,7,8,0,0,339,340,7,14,0,0,340,341,7,13,
        0,0,341,72,1,0,0,0,342,343,5,43,0,0,343,74,1,0,0,0,344,345,5,45,
        0,0,345,76,1,0,0,0,346,347,5,42,0,0,347,78,1,0,0,0,348,349,5,47,
        0,0,349,80,1,0,0,0,350,351,5,58,0,0,351,352,5,61,0,0,352,82,1,0,
        0,0,353,354,5,44,0,0,354,84,1,0,0,0,355,356,5,59,0,0,356,86,1,0,
        0,0,357,358,5,58,0,0,358,88,1,0,0,0,359,360,5,61,0,0,360,90,1,0,
        0,0,361,362,5,60,0,0,362,363,5,62,0,0,363,92,1,0,0,0,364,365,5,60,
        0,0,365,94,1,0,0,0,366,367,5,60,0,0,367,368,5,61,0,0,368,96,1,0,
        0,0,369,370,5,62,0,0,370,371,5,61,0,0,371,98,1,0,0,0,372,373,5,62,
        0,0,373,100,1,0,0,0,374,375,5,40,0,0,375,102,1,0,0,0,376,377,5,41,
        0,0,377,104,1,0,0,0,378,379,5,91,0,0,379,106,1,0,0,0,380,381,5,40,
        0,0,381,382,5,46,0,0,382,108,1,0,0,0,383,384,5,93,0,0,384,110,1,
        0,0,0,385,386,5,46,0,0,386,387,5,41,0,0,387,112,1,0,0,0,388,389,
        5,94,0,0,389,114,1,0,0,0,390,391,5,64,0,0,391,116,1,0,0,0,392,393,
        5,46,0,0,393,118,1,0,0,0,394,395,5,46,0,0,395,396,5,46,0,0,396,120,
        1,0,0,0,397,398,5,123,0,0,398,122,1,0,0,0,399,400,5,125,0,0,400,
        124,1,0,0,0,401,402,7,18,0,0,402,403,7,1,0,0,403,404,7,8,0,0,404,
        405,7,14,0,0,405,126,1,0,0,0,406,407,7,8,0,0,407,408,7,1,0,0,408,
        409,7,14,0,0,409,410,7,6,0,0,410,411,7,3,0,0,411,412,7,17,0,0,412,
        413,7,0,0,0,413,414,7,11,0,0,414,415,7,6,0,0,415,128,1,0,0,0,416,
        417,7,18,0,0,417,418,7,12,0,0,418,419,7,6,0,0,419,420,7,12,0,0,420,
        130,1,0,0,0,421,422,7,12,0,0,422,423,7,14,0,0,423,424,7,3,0,0,424,
        425,7,8,0,0,425,426,7,1,0,0,426,427,7,7,0,0,427,132,1,0,0,0,428,
        429,7,8,0,0,429,430,7,19,0,0,430,431,7,20,0,0,431,432,7,10,0,0,432,
        433,7,6,0,0,433,434,7,19,0,0,434,435,7,6,0,0,435,436,7,1,0,0,436,
        437,7,14,0,0,437,438,7,0,0,0,438,439,7,14,0,0,439,440,7,8,0,0,440,
        441,7,9,0,0,441,442,7,1,0,0,442,134,1,0,0,0,443,444,7,14,0,0,444,
        445,7,3,0,0,445,446,7,18,0,0,446,447,7,6,0,0,447,136,1,0,0,0,448,
        449,7,17,0,0,449,450,7,0,0,0,450,451,7,10,0,0,451,452,7,12,0,0,452,
        453,7,6,0,0,453,138,1,0,0,0,454,455,7,12,0,0,455,456,7,13,0,0,456,
        457,7,10,0,0,457,140,1,0,0,0,458,459,7,12,0,0,459,460,7,13,0,0,460,
        461,7,3,0,0,461,142,1,0,0,0,462,464,7,22,0,0,463,462,1,0,0,0,464,
        465,1,0,0,0,465,463,1,0,0,0,465,466,1,0,0,0,466,467,1,0,0,0,467,
        468,6,71,0,0,468,144,1,0,0,0,469,470,5,40,0,0,470,471,5,42,0,0,471,
        475,1,0,0,0,472,474,9,0,0,0,473,472,1,0,0,0,474,477,1,0,0,0,475,
        476,1,0,0,0,475,473,1,0,0,0,476,478,1,0,0,0,477,475,1,0,0,0,478,
        479,5,42,0,0,479,480,5,41,0,0,480,481,1,0,0,0,481,482,6,72,0,0,482,
        146,1,0,0,0,483,487,5,123,0,0,484,486,9,0,0,0,485,484,1,0,0,0,486,
        489,1,0,0,0,487,488,1,0,0,0,487,485,1,0,0,0,488,490,1,0,0,0,489,
        487,1,0,0,0,490,491,5,125,0,0,491,492,1,0,0,0,492,493,6,73,0,0,493,
        148,1,0,0,0,494,498,7,23,0,0,495,497,7,24,0,0,496,495,1,0,0,0,497,
        500,1,0,0,0,498,496,1,0,0,0,498,499,1,0,0,0,499,150,1,0,0,0,500,
        498,1,0,0,0,501,507,5,39,0,0,502,503,5,39,0,0,503,506,5,39,0,0,504,
        506,8,25,0,0,505,502,1,0,0,0,505,504,1,0,0,0,506,509,1,0,0,0,507,
        505,1,0,0,0,507,508,1,0,0,0,508,510,1,0,0,0,509,507,1,0,0,0,510,
        511,5,39,0,0,511,152,1,0,0,0,512,514,7,26,0,0,513,512,1,0,0,0,514,
        515,1,0,0,0,515,513,1,0,0,0,515,516,1,0,0,0,516,154,1,0,0,0,517,
        519,7,26,0,0,518,517,1,0,0,0,519,520,1,0,0,0,520,518,1,0,0,0,520,
        521,1,0,0,0,521,528,1,0,0,0,522,524,5,46,0,0,523,525,7,26,0,0,524,
        523,1,0,0,0,525,526,1,0,0,0,526,524,1,0,0,0,526,527,1,0,0,0,527,
        529,1,0,0,0,528,522,1,0,0,0,528,529,1,0,0,0,529,539,1,0,0,0,530,
        532,7,6,0,0,531,533,7,27,0,0,532,531,1,0,0,0,532,533,1,0,0,0,533,
        535,1,0,0,0,534,536,7,26,0,0,535,534,1,0,0,0,536,537,1,0,0,0,537,
        535,1,0,0,0,537,538,1,0,0,0,538,540,1,0,0,0,539,530,1,0,0,0,539,
        540,1,0,0,0,540,156,1,0,0,0,14,0,465,475,487,498,505,507,515,520,
        526,528,532,537,539,1,6,0,0
    ]

class PascalLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    AND = 1
    ARRAY = 2
    BEGIN = 3
    BOOLEAN = 4
    CASE = 5
    CHAR = 6
    CHR = 7
    CONST = 8
    DIV = 9
    DO = 10
    DOWNTO = 11
    ELSE = 12
    END = 13
    FILE = 14
    FOR = 15
    FUNCTION = 16
    IF = 17
    IN = 18
    INTEGER = 19
    MOD = 20
    NIL = 21
    NOT = 22
    OF = 23
    OR = 24
    PACKED = 25
    PROGRAM = 26
    REAL = 27
    RECORD = 28
    REPEAT = 29
    THEN = 30
    TO = 31
    TYPE = 32
    UNTIL = 33
    VAR = 34
    WHILE = 35
    WITH = 36
    PLUS = 37
    MINUS = 38
    STAR = 39
    SLASH = 40
    ASSIGN = 41
    COMMA = 42
    SEMI = 43
    COLON = 44
    EQUAL = 45
    NOT_EQUAL = 46
    LT = 47
    LE = 48
    GE = 49
    GT = 50
    LPAREN = 51
    RPAREN = 52
    LBRACK = 53
    LBRACK2 = 54
    RBRACK = 55
    RBRACK2 = 56
    POINTER = 57
    AT = 58
    DOT = 59
    DOTDOT = 60
    LCURLY = 61
    RCURLY = 62
    UNIT = 63
    INTERFACE = 64
    USES = 65
    STRING = 66
    IMPLEMENTATION = 67
    TRUE = 68
    FALSE = 69
    SHL = 70
    SHR = 71
    WS = 72
    COMMENT_1 = 73
    COMMENT_2 = 74
    IDENT = 75
    STRING_LITERAL = 76
    NUM_INT = 77
    NUM_REAL = 78

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'AND'", "'ARRAY'", "'BEGIN'", "'BOOLEAN'", "'CASE'", "'CHAR'", 
            "'CHR'", "'CONST'", "'DIV'", "'DO'", "'DOWNTO'", "'ELSE'", "'END'", 
            "'FILE'", "'FOR'", "'FUNCTION'", "'IF'", "'IN'", "'INTEGER'", 
            "'MOD'", "'NIL'", "'NOT'", "'OF'", "'OR'", "'PACKED'", "'PROGRAM'", 
            "'REAL'", "'RECORD'", "'REPEAT'", "'THEN'", "'TO'", "'TYPE'", 
            "'UNTIL'", "'VAR'", "'WHILE'", "'WITH'", "'+'", "'-'", "'*'", 
            "'/'", "':='", "','", "';'", "':'", "'='", "'<>'", "'<'", "'<='", 
            "'>='", "'>'", "'('", "')'", "'['", "'(.'", "']'", "'.)'", "'^'", 
            "'@'", "'.'", "'..'", "'{'", "'}'", "'UNIT'", "'INTERFACE'", 
            "'USES'", "'STRING'", "'IMPLEMENTATION'", "'TRUE'", "'FALSE'", 
            "'SHL'", "'SHR'" ]

    symbolicNames = [ "<INVALID>",
            "AND", "ARRAY", "BEGIN", "BOOLEAN", "CASE", "CHAR", "CHR", "CONST", 
            "DIV", "DO", "DOWNTO", "ELSE", "END", "FILE", "FOR", "FUNCTION", 
            "IF", "IN", "INTEGER", "MOD", "NIL", "NOT", "OF", "OR", "PACKED", 
            "PROGRAM", "REAL", "RECORD", "REPEAT", "THEN", "TO", "TYPE", 
            "UNTIL", "VAR", "WHILE", "WITH", "PLUS", "MINUS", "STAR", "SLASH", 
            "ASSIGN", "COMMA", "SEMI", "COLON", "EQUAL", "NOT_EQUAL", "LT", 
            "LE", "GE", "GT", "LPAREN", "RPAREN", "LBRACK", "LBRACK2", "RBRACK", 
            "RBRACK2", "POINTER", "AT", "DOT", "DOTDOT", "LCURLY", "RCURLY", 
            "UNIT", "INTERFACE", "USES", "STRING", "IMPLEMENTATION", "TRUE", 
            "FALSE", "SHL", "SHR", "WS", "COMMENT_1", "COMMENT_2", "IDENT", 
            "STRING_LITERAL", "NUM_INT", "NUM_REAL" ]

    ruleNames = [ "AND", "ARRAY", "BEGIN", "BOOLEAN", "CASE", "CHAR", "CHR", 
                  "CONST", "DIV", "DO", "DOWNTO", "ELSE", "END", "FILE", 
                  "FOR", "FUNCTION", "IF", "IN", "INTEGER", "MOD", "NIL", 
                  "NOT", "OF", "OR", "PACKED", "PROGRAM", "REAL", "RECORD", 
                  "REPEAT", "THEN", "TO", "TYPE", "UNTIL", "VAR", "WHILE", 
                  "WITH", "PLUS", "MINUS", "STAR", "SLASH", "ASSIGN", "COMMA", 
                  "SEMI", "COLON", "EQUAL", "NOT_EQUAL", "LT", "LE", "GE", 
                  "GT", "LPAREN", "RPAREN", "LBRACK", "LBRACK2", "RBRACK", 
                  "RBRACK2", "POINTER", "AT", "DOT", "DOTDOT", "LCURLY", 
                  "RCURLY", "UNIT", "INTERFACE", "USES", "STRING", "IMPLEMENTATION", 
                  "TRUE", "FALSE", "SHL", "SHR", "WS", "COMMENT_1", "COMMENT_2", 
                  "IDENT", "STRING_LITERAL", "NUM_INT", "NUM_REAL" ]

    grammarFileName = "Pascal.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None



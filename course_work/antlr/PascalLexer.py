# Generated from Pascal.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,80,559,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
        71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,2,
        78,7,78,2,79,7,79,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,
        2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,
        4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,
        7,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,
        1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,
        1,13,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,
        1,15,1,16,1,16,1,16,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,
        1,18,1,18,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,21,1,21,1,21,
        1,21,1,22,1,22,1,22,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,
        1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,
        1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,28,1,28,
        1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,30,
        1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,33,1,33,
        1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,
        1,36,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,38,1,38,
        1,39,1,39,1,40,1,40,1,41,1,41,1,42,1,42,1,42,1,43,1,43,1,44,1,44,
        1,45,1,45,1,46,1,46,1,47,1,47,1,47,1,48,1,48,1,49,1,49,1,49,1,50,
        1,50,1,50,1,51,1,51,1,52,1,52,1,53,1,53,1,54,1,54,1,55,1,55,1,55,
        1,56,1,56,1,57,1,57,1,57,1,58,1,58,1,59,1,59,1,60,1,60,1,61,1,61,
        1,61,1,62,1,62,1,63,1,63,1,64,1,64,1,64,1,64,1,64,1,65,1,65,1,65,
        1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,66,1,66,1,66,1,66,1,66,1,67,
        1,67,1,67,1,67,1,67,1,67,1,67,1,68,1,68,1,68,1,68,1,68,1,68,1,68,
        1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,69,1,69,1,69,1,69,1,69,
        1,70,1,70,1,70,1,70,1,70,1,70,1,71,1,71,1,71,1,71,1,72,1,72,1,72,
        1,72,1,73,4,73,482,8,73,11,73,12,73,483,1,73,1,73,1,74,1,74,1,74,
        1,74,5,74,492,8,74,10,74,12,74,495,9,74,1,74,1,74,1,74,1,74,1,74,
        1,75,1,75,5,75,504,8,75,10,75,12,75,507,9,75,1,75,1,75,1,75,1,75,
        1,76,1,76,5,76,515,8,76,10,76,12,76,518,9,76,1,77,1,77,1,77,1,77,
        5,77,524,8,77,10,77,12,77,527,9,77,1,77,1,77,1,78,4,78,532,8,78,
        11,78,12,78,533,1,79,4,79,537,8,79,11,79,12,79,538,1,79,1,79,4,79,
        543,8,79,11,79,12,79,544,3,79,547,8,79,1,79,1,79,3,79,551,8,79,1,
        79,4,79,554,8,79,11,79,12,79,555,3,79,558,8,79,2,493,505,0,80,1,
        1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,
        14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,
        25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,
        36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,
        47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,
        57,115,58,117,59,119,60,121,61,123,62,125,63,127,64,129,65,131,66,
        133,67,135,68,137,69,139,70,141,71,143,72,145,73,147,74,149,75,151,
        76,153,77,155,78,157,79,159,80,1,0,28,2,0,65,65,97,97,2,0,78,78,
        110,110,2,0,68,68,100,100,2,0,82,82,114,114,2,0,89,89,121,121,2,
        0,66,66,98,98,2,0,69,69,101,101,2,0,71,71,103,103,2,0,73,73,105,
        105,2,0,79,79,111,111,2,0,76,76,108,108,2,0,67,67,99,99,2,0,83,83,
        115,115,2,0,72,72,104,104,2,0,84,84,116,116,2,0,86,86,118,118,2,
        0,87,87,119,119,2,0,70,70,102,102,2,0,85,85,117,117,2,0,77,77,109,
        109,2,0,80,80,112,112,2,0,75,75,107,107,3,0,9,10,13,13,32,32,2,0,
        65,90,97,122,4,0,48,57,65,90,95,95,97,122,1,0,39,39,1,0,48,57,2,
        0,43,43,45,45,571,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,
        0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,
        0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,
        0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,
        0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,
        0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,
        0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,
        0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,
        0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,
        0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,
        0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,
        0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,
        117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,
        0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,
        1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,
        0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,
        0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,1,161,1,0,0,0,3,
        165,1,0,0,0,5,171,1,0,0,0,7,177,1,0,0,0,9,185,1,0,0,0,11,190,1,0,
        0,0,13,195,1,0,0,0,15,199,1,0,0,0,17,205,1,0,0,0,19,209,1,0,0,0,
        21,212,1,0,0,0,23,219,1,0,0,0,25,224,1,0,0,0,27,228,1,0,0,0,29,233,
        1,0,0,0,31,237,1,0,0,0,33,246,1,0,0,0,35,249,1,0,0,0,37,252,1,0,
        0,0,39,260,1,0,0,0,41,264,1,0,0,0,43,268,1,0,0,0,45,272,1,0,0,0,
        47,275,1,0,0,0,49,278,1,0,0,0,51,285,1,0,0,0,53,295,1,0,0,0,55,303,
        1,0,0,0,57,308,1,0,0,0,59,315,1,0,0,0,61,322,1,0,0,0,63,326,1,0,
        0,0,65,331,1,0,0,0,67,334,1,0,0,0,69,339,1,0,0,0,71,345,1,0,0,0,
        73,349,1,0,0,0,75,355,1,0,0,0,77,360,1,0,0,0,79,362,1,0,0,0,81,364,
        1,0,0,0,83,366,1,0,0,0,85,368,1,0,0,0,87,371,1,0,0,0,89,373,1,0,
        0,0,91,375,1,0,0,0,93,377,1,0,0,0,95,379,1,0,0,0,97,382,1,0,0,0,
        99,384,1,0,0,0,101,387,1,0,0,0,103,390,1,0,0,0,105,392,1,0,0,0,107,
        394,1,0,0,0,109,396,1,0,0,0,111,398,1,0,0,0,113,401,1,0,0,0,115,
        403,1,0,0,0,117,406,1,0,0,0,119,408,1,0,0,0,121,410,1,0,0,0,123,
        412,1,0,0,0,125,415,1,0,0,0,127,417,1,0,0,0,129,419,1,0,0,0,131,
        424,1,0,0,0,133,434,1,0,0,0,135,439,1,0,0,0,137,446,1,0,0,0,139,
        461,1,0,0,0,141,466,1,0,0,0,143,472,1,0,0,0,145,476,1,0,0,0,147,
        481,1,0,0,0,149,487,1,0,0,0,151,501,1,0,0,0,153,512,1,0,0,0,155,
        519,1,0,0,0,157,531,1,0,0,0,159,536,1,0,0,0,161,162,7,0,0,0,162,
        163,7,1,0,0,163,164,7,2,0,0,164,2,1,0,0,0,165,166,7,0,0,0,166,167,
        7,3,0,0,167,168,7,3,0,0,168,169,7,0,0,0,169,170,7,4,0,0,170,4,1,
        0,0,0,171,172,7,5,0,0,172,173,7,6,0,0,173,174,7,7,0,0,174,175,7,
        8,0,0,175,176,7,1,0,0,176,6,1,0,0,0,177,178,7,5,0,0,178,179,7,9,
        0,0,179,180,7,9,0,0,180,181,7,10,0,0,181,182,7,6,0,0,182,183,7,0,
        0,0,183,184,7,1,0,0,184,8,1,0,0,0,185,186,7,11,0,0,186,187,7,0,0,
        0,187,188,7,12,0,0,188,189,7,6,0,0,189,10,1,0,0,0,190,191,7,11,0,
        0,191,192,7,13,0,0,192,193,7,0,0,0,193,194,7,3,0,0,194,12,1,0,0,
        0,195,196,7,11,0,0,196,197,7,13,0,0,197,198,7,3,0,0,198,14,1,0,0,
        0,199,200,7,11,0,0,200,201,7,9,0,0,201,202,7,1,0,0,202,203,7,12,
        0,0,203,204,7,14,0,0,204,16,1,0,0,0,205,206,7,2,0,0,206,207,7,8,
        0,0,207,208,7,15,0,0,208,18,1,0,0,0,209,210,7,2,0,0,210,211,7,9,
        0,0,211,20,1,0,0,0,212,213,7,2,0,0,213,214,7,9,0,0,214,215,7,16,
        0,0,215,216,7,1,0,0,216,217,7,14,0,0,217,218,7,9,0,0,218,22,1,0,
        0,0,219,220,7,6,0,0,220,221,7,10,0,0,221,222,7,12,0,0,222,223,7,
        6,0,0,223,24,1,0,0,0,224,225,7,6,0,0,225,226,7,1,0,0,226,227,7,2,
        0,0,227,26,1,0,0,0,228,229,7,17,0,0,229,230,7,8,0,0,230,231,7,10,
        0,0,231,232,7,6,0,0,232,28,1,0,0,0,233,234,7,17,0,0,234,235,7,9,
        0,0,235,236,7,3,0,0,236,30,1,0,0,0,237,238,7,17,0,0,238,239,7,18,
        0,0,239,240,7,1,0,0,240,241,7,11,0,0,241,242,7,14,0,0,242,243,7,
        8,0,0,243,244,7,9,0,0,244,245,7,1,0,0,245,32,1,0,0,0,246,247,7,8,
        0,0,247,248,7,17,0,0,248,34,1,0,0,0,249,250,7,8,0,0,250,251,7,1,
        0,0,251,36,1,0,0,0,252,253,7,8,0,0,253,254,7,1,0,0,254,255,7,14,
        0,0,255,256,7,6,0,0,256,257,7,7,0,0,257,258,7,6,0,0,258,259,7,3,
        0,0,259,38,1,0,0,0,260,261,7,19,0,0,261,262,7,9,0,0,262,263,7,2,
        0,0,263,40,1,0,0,0,264,265,7,1,0,0,265,266,7,8,0,0,266,267,7,10,
        0,0,267,42,1,0,0,0,268,269,7,1,0,0,269,270,7,9,0,0,270,271,7,14,
        0,0,271,44,1,0,0,0,272,273,7,9,0,0,273,274,7,17,0,0,274,46,1,0,0,
        0,275,276,7,9,0,0,276,277,7,3,0,0,277,48,1,0,0,0,278,279,7,20,0,
        0,279,280,7,0,0,0,280,281,7,11,0,0,281,282,7,21,0,0,282,283,7,6,
        0,0,283,284,7,2,0,0,284,50,1,0,0,0,285,286,7,20,0,0,286,287,7,3,
        0,0,287,288,7,9,0,0,288,289,7,11,0,0,289,290,7,6,0,0,290,291,7,2,
        0,0,291,292,7,18,0,0,292,293,7,3,0,0,293,294,7,6,0,0,294,52,1,0,
        0,0,295,296,7,20,0,0,296,297,7,3,0,0,297,298,7,9,0,0,298,299,7,7,
        0,0,299,300,7,3,0,0,300,301,7,0,0,0,301,302,7,19,0,0,302,54,1,0,
        0,0,303,304,7,3,0,0,304,305,7,6,0,0,305,306,7,0,0,0,306,307,7,10,
        0,0,307,56,1,0,0,0,308,309,7,3,0,0,309,310,7,6,0,0,310,311,7,11,
        0,0,311,312,7,9,0,0,312,313,7,3,0,0,313,314,7,2,0,0,314,58,1,0,0,
        0,315,316,7,3,0,0,316,317,7,6,0,0,317,318,7,20,0,0,318,319,7,6,0,
        0,319,320,7,0,0,0,320,321,7,14,0,0,321,60,1,0,0,0,322,323,7,12,0,
        0,323,324,7,6,0,0,324,325,7,14,0,0,325,62,1,0,0,0,326,327,7,14,0,
        0,327,328,7,13,0,0,328,329,7,6,0,0,329,330,7,1,0,0,330,64,1,0,0,
        0,331,332,7,14,0,0,332,333,7,9,0,0,333,66,1,0,0,0,334,335,7,14,0,
        0,335,336,7,4,0,0,336,337,7,20,0,0,337,338,7,6,0,0,338,68,1,0,0,
        0,339,340,7,18,0,0,340,341,7,1,0,0,341,342,7,14,0,0,342,343,7,8,
        0,0,343,344,7,10,0,0,344,70,1,0,0,0,345,346,7,15,0,0,346,347,7,0,
        0,0,347,348,7,3,0,0,348,72,1,0,0,0,349,350,7,16,0,0,350,351,7,13,
        0,0,351,352,7,8,0,0,352,353,7,10,0,0,353,354,7,6,0,0,354,74,1,0,
        0,0,355,356,7,16,0,0,356,357,7,8,0,0,357,358,7,14,0,0,358,359,7,
        13,0,0,359,76,1,0,0,0,360,361,5,43,0,0,361,78,1,0,0,0,362,363,5,
        45,0,0,363,80,1,0,0,0,364,365,5,42,0,0,365,82,1,0,0,0,366,367,5,
        47,0,0,367,84,1,0,0,0,368,369,5,58,0,0,369,370,5,61,0,0,370,86,1,
        0,0,0,371,372,5,44,0,0,372,88,1,0,0,0,373,374,5,59,0,0,374,90,1,
        0,0,0,375,376,5,58,0,0,376,92,1,0,0,0,377,378,5,61,0,0,378,94,1,
        0,0,0,379,380,5,60,0,0,380,381,5,62,0,0,381,96,1,0,0,0,382,383,5,
        60,0,0,383,98,1,0,0,0,384,385,5,60,0,0,385,386,5,61,0,0,386,100,
        1,0,0,0,387,388,5,62,0,0,388,389,5,61,0,0,389,102,1,0,0,0,390,391,
        5,62,0,0,391,104,1,0,0,0,392,393,5,40,0,0,393,106,1,0,0,0,394,395,
        5,41,0,0,395,108,1,0,0,0,396,397,5,91,0,0,397,110,1,0,0,0,398,399,
        5,40,0,0,399,400,5,46,0,0,400,112,1,0,0,0,401,402,5,93,0,0,402,114,
        1,0,0,0,403,404,5,46,0,0,404,405,5,41,0,0,405,116,1,0,0,0,406,407,
        5,94,0,0,407,118,1,0,0,0,408,409,5,64,0,0,409,120,1,0,0,0,410,411,
        5,46,0,0,411,122,1,0,0,0,412,413,5,46,0,0,413,414,5,46,0,0,414,124,
        1,0,0,0,415,416,5,123,0,0,416,126,1,0,0,0,417,418,5,125,0,0,418,
        128,1,0,0,0,419,420,7,18,0,0,420,421,7,1,0,0,421,422,7,8,0,0,422,
        423,7,14,0,0,423,130,1,0,0,0,424,425,7,8,0,0,425,426,7,1,0,0,426,
        427,7,14,0,0,427,428,7,6,0,0,428,429,7,3,0,0,429,430,7,17,0,0,430,
        431,7,0,0,0,431,432,7,11,0,0,432,433,7,6,0,0,433,132,1,0,0,0,434,
        435,7,18,0,0,435,436,7,12,0,0,436,437,7,6,0,0,437,438,7,12,0,0,438,
        134,1,0,0,0,439,440,7,12,0,0,440,441,7,14,0,0,441,442,7,3,0,0,442,
        443,7,8,0,0,443,444,7,1,0,0,444,445,7,7,0,0,445,136,1,0,0,0,446,
        447,7,8,0,0,447,448,7,19,0,0,448,449,7,20,0,0,449,450,7,10,0,0,450,
        451,7,6,0,0,451,452,7,19,0,0,452,453,7,6,0,0,453,454,7,1,0,0,454,
        455,7,14,0,0,455,456,7,0,0,0,456,457,7,14,0,0,457,458,7,8,0,0,458,
        459,7,9,0,0,459,460,7,1,0,0,460,138,1,0,0,0,461,462,7,14,0,0,462,
        463,7,3,0,0,463,464,7,18,0,0,464,465,7,6,0,0,465,140,1,0,0,0,466,
        467,7,17,0,0,467,468,7,0,0,0,468,469,7,10,0,0,469,470,7,12,0,0,470,
        471,7,6,0,0,471,142,1,0,0,0,472,473,7,12,0,0,473,474,7,13,0,0,474,
        475,7,10,0,0,475,144,1,0,0,0,476,477,7,12,0,0,477,478,7,13,0,0,478,
        479,7,3,0,0,479,146,1,0,0,0,480,482,7,22,0,0,481,480,1,0,0,0,482,
        483,1,0,0,0,483,481,1,0,0,0,483,484,1,0,0,0,484,485,1,0,0,0,485,
        486,6,73,0,0,486,148,1,0,0,0,487,488,5,40,0,0,488,489,5,42,0,0,489,
        493,1,0,0,0,490,492,9,0,0,0,491,490,1,0,0,0,492,495,1,0,0,0,493,
        494,1,0,0,0,493,491,1,0,0,0,494,496,1,0,0,0,495,493,1,0,0,0,496,
        497,5,42,0,0,497,498,5,41,0,0,498,499,1,0,0,0,499,500,6,74,0,0,500,
        150,1,0,0,0,501,505,5,123,0,0,502,504,9,0,0,0,503,502,1,0,0,0,504,
        507,1,0,0,0,505,506,1,0,0,0,505,503,1,0,0,0,506,508,1,0,0,0,507,
        505,1,0,0,0,508,509,5,125,0,0,509,510,1,0,0,0,510,511,6,75,0,0,511,
        152,1,0,0,0,512,516,7,23,0,0,513,515,7,24,0,0,514,513,1,0,0,0,515,
        518,1,0,0,0,516,514,1,0,0,0,516,517,1,0,0,0,517,154,1,0,0,0,518,
        516,1,0,0,0,519,525,5,39,0,0,520,521,5,39,0,0,521,524,5,39,0,0,522,
        524,8,25,0,0,523,520,1,0,0,0,523,522,1,0,0,0,524,527,1,0,0,0,525,
        523,1,0,0,0,525,526,1,0,0,0,526,528,1,0,0,0,527,525,1,0,0,0,528,
        529,5,39,0,0,529,156,1,0,0,0,530,532,7,26,0,0,531,530,1,0,0,0,532,
        533,1,0,0,0,533,531,1,0,0,0,533,534,1,0,0,0,534,158,1,0,0,0,535,
        537,7,26,0,0,536,535,1,0,0,0,537,538,1,0,0,0,538,536,1,0,0,0,538,
        539,1,0,0,0,539,546,1,0,0,0,540,542,5,46,0,0,541,543,7,26,0,0,542,
        541,1,0,0,0,543,544,1,0,0,0,544,542,1,0,0,0,544,545,1,0,0,0,545,
        547,1,0,0,0,546,540,1,0,0,0,546,547,1,0,0,0,547,557,1,0,0,0,548,
        550,7,6,0,0,549,551,7,27,0,0,550,549,1,0,0,0,550,551,1,0,0,0,551,
        553,1,0,0,0,552,554,7,26,0,0,553,552,1,0,0,0,554,555,1,0,0,0,555,
        553,1,0,0,0,555,556,1,0,0,0,556,558,1,0,0,0,557,548,1,0,0,0,557,
        558,1,0,0,0,558,160,1,0,0,0,14,0,483,493,505,516,523,525,533,538,
        544,546,550,555,557,1,6,0,0
    ]

class PascalLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    AND = 1
    ARRAY = 2
    BEGIN = 3
    BOOLEAN = 4
    CASE = 5
    CHAR = 6
    CHR = 7
    CONST = 8
    DIV = 9
    DO = 10
    DOWNTO = 11
    ELSE = 12
    END = 13
    FILE = 14
    FOR = 15
    FUNCTION = 16
    IF = 17
    IN = 18
    INTEGER = 19
    MOD = 20
    NIL = 21
    NOT = 22
    OF = 23
    OR = 24
    PACKED = 25
    PROCEDURE = 26
    PROGRAM = 27
    REAL = 28
    RECORD = 29
    REPEAT = 30
    SET = 31
    THEN = 32
    TO = 33
    TYPE = 34
    UNTIL = 35
    VAR = 36
    WHILE = 37
    WITH = 38
    PLUS = 39
    MINUS = 40
    STAR = 41
    SLASH = 42
    ASSIGN = 43
    COMMA = 44
    SEMI = 45
    COLON = 46
    EQUAL = 47
    NOT_EQUAL = 48
    LT = 49
    LE = 50
    GE = 51
    GT = 52
    LPAREN = 53
    RPAREN = 54
    LBRACK = 55
    LBRACK2 = 56
    RBRACK = 57
    RBRACK2 = 58
    POINTER = 59
    AT = 60
    DOT = 61
    DOTDOT = 62
    LCURLY = 63
    RCURLY = 64
    UNIT = 65
    INTERFACE = 66
    USES = 67
    STRING = 68
    IMPLEMENTATION = 69
    TRUE = 70
    FALSE = 71
    SHL = 72
    SHR = 73
    WS = 74
    COMMENT_1 = 75
    COMMENT_2 = 76
    IDENT = 77
    STRING_LITERAL = 78
    NUM_INT = 79
    NUM_REAL = 80

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'AND'", "'ARRAY'", "'BEGIN'", "'BOOLEAN'", "'CASE'", "'CHAR'", 
            "'CHR'", "'CONST'", "'DIV'", "'DO'", "'DOWNTO'", "'ELSE'", "'END'", 
            "'FILE'", "'FOR'", "'FUNCTION'", "'IF'", "'IN'", "'INTEGER'", 
            "'MOD'", "'NIL'", "'NOT'", "'OF'", "'OR'", "'PACKED'", "'PROCEDURE'", 
            "'PROGRAM'", "'REAL'", "'RECORD'", "'REPEAT'", "'SET'", "'THEN'", 
            "'TO'", "'TYPE'", "'UNTIL'", "'VAR'", "'WHILE'", "'WITH'", "'+'", 
            "'-'", "'*'", "'/'", "':='", "','", "';'", "':'", "'='", "'<>'", 
            "'<'", "'<='", "'>='", "'>'", "'('", "')'", "'['", "'(.'", "']'", 
            "'.)'", "'^'", "'@'", "'.'", "'..'", "'{'", "'}'", "'UNIT'", 
            "'INTERFACE'", "'USES'", "'STRING'", "'IMPLEMENTATION'", "'TRUE'", 
            "'FALSE'", "'SHL'", "'SHR'" ]

    symbolicNames = [ "<INVALID>",
            "AND", "ARRAY", "BEGIN", "BOOLEAN", "CASE", "CHAR", "CHR", "CONST", 
            "DIV", "DO", "DOWNTO", "ELSE", "END", "FILE", "FOR", "FUNCTION", 
            "IF", "IN", "INTEGER", "MOD", "NIL", "NOT", "OF", "OR", "PACKED", 
            "PROCEDURE", "PROGRAM", "REAL", "RECORD", "REPEAT", "SET", "THEN", 
            "TO", "TYPE", "UNTIL", "VAR", "WHILE", "WITH", "PLUS", "MINUS", 
            "STAR", "SLASH", "ASSIGN", "COMMA", "SEMI", "COLON", "EQUAL", 
            "NOT_EQUAL", "LT", "LE", "GE", "GT", "LPAREN", "RPAREN", "LBRACK", 
            "LBRACK2", "RBRACK", "RBRACK2", "POINTER", "AT", "DOT", "DOTDOT", 
            "LCURLY", "RCURLY", "UNIT", "INTERFACE", "USES", "STRING", "IMPLEMENTATION", 
            "TRUE", "FALSE", "SHL", "SHR", "WS", "COMMENT_1", "COMMENT_2", 
            "IDENT", "STRING_LITERAL", "NUM_INT", "NUM_REAL" ]

    ruleNames = [ "AND", "ARRAY", "BEGIN", "BOOLEAN", "CASE", "CHAR", "CHR", 
                  "CONST", "DIV", "DO", "DOWNTO", "ELSE", "END", "FILE", 
                  "FOR", "FUNCTION", "IF", "IN", "INTEGER", "MOD", "NIL", 
                  "NOT", "OF", "OR", "PACKED", "PROCEDURE", "PROGRAM", "REAL", 
                  "RECORD", "REPEAT", "SET", "THEN", "TO", "TYPE", "UNTIL", 
                  "VAR", "WHILE", "WITH", "PLUS", "MINUS", "STAR", "SLASH", 
                  "ASSIGN", "COMMA", "SEMI", "COLON", "EQUAL", "NOT_EQUAL", 
                  "LT", "LE", "GE", "GT", "LPAREN", "RPAREN", "LBRACK", 
                  "LBRACK2", "RBRACK", "RBRACK2", "POINTER", "AT", "DOT", 
                  "DOTDOT", "LCURLY", "RCURLY", "UNIT", "INTERFACE", "USES", 
                  "STRING", "IMPLEMENTATION", "TRUE", "FALSE", "SHL", "SHR", 
                  "WS", "COMMENT_1", "COMMENT_2", "IDENT", "STRING_LITERAL", 
                  "NUM_INT", "NUM_REAL" ]

    grammarFileName = "Pascal.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


